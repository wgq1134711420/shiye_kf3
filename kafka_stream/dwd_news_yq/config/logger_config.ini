
;[loggers]
;# 定义logger模块，root是父类，必需存在的，其它的是自定义。
;# logging.getLogger(NAME)便相当于向logging模块注册了一种日志打印
;# name 中用 . 表示 log 的继承关系
;
;
;[logger_root]
;# 实现上面定义的logger模块，必需是[logger_xxxx]这样的形式
;# [logger_xxxx] logger_模块名称
;# level 级别，级别有DEBUG、INFO、WARNING、ERROR、CRITICAL
;# handlers 处理类，可以有多个，用逗号分开
;# qualname logger名称，应用程序通过 logging.getLogger获取。对于不能获取的名称，则记录到root模块。
;# propagate 是否继承父类的log信息，0:否 1:是
;
;
;[handlers]
;# 定义handler
;
;[handler_infohandler]
;# [handler_xxxx]
;# class handler类名
;# level 日志级别
;# formatter，下面定义的formatter
;# args handler初始化函数参数
;
;
;[formatters]
;# 定义格式化输出
;
;[formatter_form01]
;# 日志格式
;#--------------------------------------------------
;# %(asctime)s       年-月-日 时-分-秒,毫秒 2013-04-26 20:10:43,745
;# %(filename)s      文件名，不含目录
;# %(pathname)s      目录名，完整路径
;# %(funcName)s      函数名
;# %(levelname)s     级别名
;# %(lineno)d        行号
;# %(module)s        模块名
;# %(message)s       消息体
;# %(name)s          日志模块名
;# %(process)d       进程id
;# %(processName)s   进程名
;# %(thread)d        线程id
;# %(threadName)s    线程名



[loggers]
keys=root


[handlers]   #处理器
keys=rotatingFileHandler, streamHandler,errorHandler, warningHandler


[formatters]
keys=simpleFormatter


[logger_root]
level=DEBUG
handlers=rotatingFileHandler, errorHandler, warningHandler, streamHandler


[handler_rotatingFileHandler]
;将日志输出保存到文件中，并设置单个日志wenj文件的大小和日志文件个数
class=handlers.TimedRotatingFileHandler
level=INFO
propagate=1
formatter=simpleFormatter
args=(os.path.abspath(os.getcwd() + "/logs/Default.log"), "midnight", 1, 7, 'utf-8')


[handler_errorHandler]  #必须指定class和args，class:创建handler的类名，args:传给class所指定的handler类初始化方法参数
class=handlers.TimedRotatingFileHandler
level=ERROR
propagate=1
formatter=simpleFormatter
args=(os.path.abspath(os.getcwd() + "/logs/Error.log"), "midnight", 1, 7,' utf-8')


[handler_warningHandler]
class=handlers.TimedRotatingFileHandler
level=WARNING
formatter=simpleFormatter
propagate=1
filters=[""]
args=(os.path.abspath(os.getcwd() + "/logs/Finish.log"), "midnight", 1, 7,' utf-8')


[handler_streamHandler]
level=INFO
class=StreamHandler
propagate=1
formatter=simpleFormatter
args=(sys.stdout,)


[formatter_simpleFormatter]
format=%(asctime)s %(pathname)s(%(lineno)d): %(levelname)s %(message)s


;资料
;https://www.yinyubo.cn/?p=160